@startuml

!pragma teoz true
skinparam style strictuml
skinparam maxMessageSize 300
skinparam sequenceMessageAlign left
skinparam sequenceArrowColor #blue
autonumber "<font color='red'><b><u>##</u></b></font>"


actor "User" as USR

box "POS"
	participant "PagoPA App" as APP
	participant "Poynt Service" as SRV
end box

box "Poynt"
	participant "Poynt API\nservices.poynt.net" as PNT
end box

box "PagoPA"
	participant "Multi-channel\nIntegration Layer" as MIL
	participant "Database" as DBS
end box


USR ->  APP: Start

opt Terminal keys expired or POS rebooted
	hnote over SRV, PNT: Getting //<poynt access token>//

	APP ->  SRV : Get Poynt access token
	SRV --> APP : //<poynt access token>//

	APP ->  APP : Generate RSA key pair
	APP ->  APP : Store //<private key>//
	
	APP ->  MIL : POST /enrollments
		note left
			__header__
			- RequestId: //<request id>//
			- Version: //<api version>//
			- AcquirerId: //<acquirer id>//
			- Channel: POS
			- MerchantId: //<merchant id>//
			- TerminalId: //<terminal id>//
			
			__body__
			{
				"accessToken": "//<poynt access token>//,
				"businessId": "//<business id>//",
				"publicKey": "//<public key>//"
			}
		end note
	
	MIL ->  PNT : GET /businesses///<business id>//
		note right
			__header__
			Api-Version: 1.2
			Authorization: Bearer //<poynt access token>//
			Content-Type: application/json
			POYNT-REQUEST-ID: //don't care//
		end note

	PNT --> MIL : HTTP 200 (ok)
		note left
			__body__
			//<business object>//
		end note
	
	MIL ->  MIL : Check coherence between //<business object>// and other data received from the POS
	
	MIL ->  DBS : Store //<business object>//
	DBS --> MIL : Ok
	
	MIL ->  DBS : Store
		note left
			{
				"acquirerId": "//<acquirer id>//",
				"merchantId": "//<merchant id>//",
				"terminalId": "//<terminal id>//",
				"terminalPublicKey": "//<public key>//"
			}
		end note
	
	DBS --> MIL : Ok
	
	MIL --> APP : HTTP 201 (created)
end opt

APP --> USR


USR ->  APP : Interation
APP ->  APP : Build //<request body>//
APP ->  APP : Build JWS header
	note left
		__//<jws header>//__
		{
			"b64": false,
			"crit": [ "b64" ],
			"iat": //<issue time>//,
			"alg": "RS256",
			"kid": "//<terminal key pair id>//"
		}
	end note
	
APP ->  APP : //<encoded header>// = base64url-encoding of //<header>//
APP ->  APP : //<signature>// = Calculate RSA signature with SHA-256 of //<encoded header>// using //<private key>//
APP ->  APP : //<encoded signature>// = base64url-encoding of //<signature>//
APP ->  APP : //<jws>// = //<encoded header>//..//<encoded signature>//
group <font color="red">https with server-auth managed by APP GW</font>
	APP ->  MIL : Request
		note left
			__header__
			- RequestId: //<request id>//
			- Version: //<api version>//
			- AcquirerId: //<acquirer id>//
			- Channel: POS
			- MerchantId: //<merchant id>//
			- TerminalId: //<terminal id>//
			- JwsSign: //<jws>//
			
			__body__
			//<request body>//
		end note
	
	MIL ->  DBS : Get client public key
	DBS --> MIL : //<public key>//
	MIL ->  MIL : Verify //<jws>// encoded header (iat, kid, alg)
	MIL ->  MIL : Verify //<jws>// signature by means of //<public key>//
	
	note over MIL
		Execute business logic
	end note

	MIL --> APP : Response 
end

APP --> USR

@enduml