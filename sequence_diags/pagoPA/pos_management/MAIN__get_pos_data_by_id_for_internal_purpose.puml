@startuml
!include_many skin.puml
!include_many actors.puml

activate other

other -> mil_registry ++ : GET /terminals?terminalUUid=//<terminal uuid>//
	note left
		__header__
		RequestId: //<request id>//
		Authorization: Bearer //<access token>//
	end note
	
note over mil_registry #LightGreen
	__//<access token>//__
	base64url(//<token header>//) + "." +
	base64url(//<access token payload>//) + "." +
	//<base64url of access token signature>//
	__//<access token payload>//__
	{
		"sub": "//<subject id>//",
		"aud": "mil.pagopa.it",
		"iss": "https:////<host name>///mil-auth",
		"iat": //<issue unix epoch>//,
		"exp": //<expiration unix epoch>//,
		"groups": [
			"pos_finder"
		],
	}
end note
	
mil_registry -> registry ++ : findById(//<terminal uuid>//)

registry --> mil_registry -- : //document//
	note right
		__//document//__
		{
			"terminalUuid": "//<terminal uuid>//",
			"serviceProviderId": "//<service provider id>//",
			"terminalHandlerId": "//<terminal handler id>//",
			"terminalId": "//<terminal id>//",
			"enabled": //<enabled>//,
			"payeeCode": "//<payee code>//",
			"slave": "//<slave>//",
			"workstations": [
				//<array of workstations>//
			],
			"pagoPa": "//<pagopa>//",
			"pagoPaConf": {
				"pspId": "//<psp id>//",
				"brokerId": "//<broker id>//",
				"channelId": "//<channel id>//"
			},
			"idpay": "//<idpay>//"
		}
	end note
	
mil_registry --> other -- : HTTP 200 (ok)
	note right
		__body__
		//See document//
	end note
	
note over mil_registry #Orange
	On terminal not found, return HTTP 404 (not found).
	On any other failure, return HTTP 500 (server error) with specific error body. 
end note

deactivate other
@enduml