@startuml
!include_many skin.puml
!include_many actors.puml

activate pos

pos -> mil ++ : PATCH /transactions///<transaction id>//
	note left
		__header__
		RequestId: //<request id>//
		Authorization: Bearer //<access token>//
		__body__
		{
			"status": "ERROR_ON_PAYMENT"
		}
	end note

note over mil #LightGreen
	__//<access token>//__
	base64url(//<token header>//) + "." +
	base64url(//<access token payload>//) + "." +
	//<base64url of access token signature>//
	__//<access token payload>//__
	{
		"sub": "//<client id>//",
		"aud": "mil.pagopa.it",
		"iss": "https:////<host name>///mil-auth",
		"iat": //<issue unix epoch>//,
		"exp": //<expiration unix epoch>//,
		"channel": "POS",
		"gtId": "//<gtId>//",
		"terminalId": "//<terminal id>//",
		"payeeCode": "//<payeeCode>//",
		"groups": [
			.
			.
			.
			"NoticePayer",
			.
			.
			.
		],
		"pspId": "//<psp id>//",
		"brokerId": "//<broker id>//",
		"channelId": "//<channel id>//"
	}
end note

group get trx data
	mil -> registry ++ : findById(//<transaction id>//)
	registry --> mil -- : //document//
		note right
			__//document//__
			{
				"id": "//<transaction id>//",
				"creationTimestamp": "//<creation timestamp>//",
				"lastStatusUpdateTimestamp": "//<last update timestamp>//",
				"status": "CREATED",
				"client": {
					"channel": "POS",
					"terminalHandlerId": "//<terminal handler id>//",
					"terminalId": "//<terminal id>//"
				},
				"pspId": "//<psp id>//",
				"pspBrokerId": "//<broker id>//",
				"channelId": "//<channel id>//",
				"noticesTotalAmount": //<total notices amount>//,
				"payerFees": //<fee charged to the payer>//,
				"payeeFees": //<fee charged to the payee>//,
				"payerAmount": //<total notices amount>// + //<fee charged to the payer>//,
				"idBundle": "//<fee bundle id>//",
				"idCiBundle": "//<fee ci bundle id>//",
				"notices": [
					{
						"paymentToken": "//<payment token>//",
						"description": "//<description>//",
						"payeeCode": "//<notice payee code>//",
						"payeeName": "//<payee name>//",
						"officeName": "//<payee office name>//",
						"creditorReferenceId": "//<iuv>//",
						"amount": //<notice amount>//,
						"transfers": [
							{
								"id": "//<n>//",
								"amount": "//<transfer amount #n>//",
								"payeeCode": "//<payee code #n>//",
								"payeeName": "//<payee name #n>//",
								"iban": "//<payee iban #n>//",
								"remittanceInformation": "//<remittance info #n>//",
								"metadata": [
									.
									.
									.
									{
										"key": "//<metadata key #n.m>//",
										"value": "//<metadata value #n.m>//"
									},
									.
									.
									.
								]
							}
						],
						"metadata": [
							.
							.
							.
							{
								"key": "//<metadata key #k>//",
								"value": "//<metadata value #k>//"
							},
							.
							.
							.
						]
					}
				],
				"standin": "//<stand id>//"
			}
		end note

	note over mil #Orange
		On not found, return HTTP 404 (not found) with specific error body.
		On any other failure, return HTTP 500 (server error) with specific error body. 
	end note
end

group interaction with pagoPA
	mil -> pagopa ++ : POST /nodo-auth/node-for-psp/v1/?soapAction=sendPaymentOutcomeV2
		note left
			__body__
			<sendPaymentOutcomeV2Request>
				<idPSP>//<psp id>//</idPSP>
				<idBrokerPSP>//<broker id>//</idBrokerPSP>
				<idChannel>//<channel id>//</idChannel>
				<password>//<password>//</password>
				<idempotencyKey>//<idempotency key>//</idempotencyKey>
				<paymentTokens>
					<paymentToken>//<payment token>//</paymentToken>
				</paymentTokens>
				<outcome>KO</outcome>
			</sendPaymentOutcomeV2Request>
		end note

	pagopa --> mil -- : HTTP 200 (ok)
		note right
			__body__
			<sendPaymentOutcomeV2Response>
				<outcome>OK</outcome>
			</sendPaymentOutcomeV2Response>
		end note
end

group update trx data
	mil -> registry ++ : update(//document//)
		note left
			__//document//__
			{
				"id": "//<transaction id>//",
				"creationTimestamp": "//<creation timestamp>//",
				"lastStatusUpdateTimestamp": "//<current timestamp>//",
				"status": "ERROR_ON_PAYMENT",
				"client": {
					"channel": "POS",
					"terminalHandlerId": "//<terminal handler id>//",
					"terminalId": "//<terminal id>//"
				},
				"pspId": "//<psp id>//",
				"pspBrokerId": "//<broker id>//",
				"channelId": "//<channel id>//",
				"noticesTotalAmount": //<total notices amount>//,
				"payerFees": //<fee charged to the payer>//,
				"payeeFees": //<fee charged to the payee>//,
				"payerAmount": //<total notices amount>// + //<fee charged to the payer>//,
				"idBundle": "//<fee bundle id>//",
				"idCiBundle": "//<fee ci bundle id>//",
				"notices": [
					{
						"paymentToken": "//<payment token>//",
						"description": "//<description>//",
						"payeeCode": "//<notice payee code>//",
						"payeeName": "//<payee name>//",
						"officeName": "//<payee office name>//",
						"creditorReferenceId": "//<iuv>//",
						"amount": //<notice amount>//,
						"transfers": [
							{
								"id": "//<n>//",
								"amount": "//<transfer amount #n>//",
								"payeeCode": "//<payee code #n>//",
								"payeeName": "//<payee name #n>//",
								"iban": "//<payee iban #n>//",
								"remittanceInformation": "//<remittance info #n>//",
								"metadata": [
									.
									.
									.
									{
										"key": "//<metadata key #n.m>//",
										"value": "//<metadata value #n.m>//"
									},
									.
									.
									.
								]
							}
						],
						"metadata": [
							.
							.
							.
							{
								"key": "//<metadata key #k>//",
								"value": "//<metadata value #k>//"
							},
							.
							.
							.
						]
					}
				],
				"standin": "//<stand id>//"
			}
		end note

	registry --> mil -- : Ok

	note over mil #Orange
		On any failure, return HTTP 500 (server error) with specific error body.
	end note
end

mil --> pos -- : HTTP 200 (ok)

deactivate pos
@enduml