@startuml
!include_many skin.puml
!include_many actors.puml

activate operator

operator -> management ++ : create transaction

management -> mil ++ : POST /transactions
	note left
		__header__
		RequestId: //<request id>//
		Authorization: Bearer //<access token>//
		__body__
		{
			"terminalUuid": "//<terminal uuid>//", 
			"noticeNumber": "//<notice number>//",
			"amount": "//<notice amount in eurocents>//"
		}
	end note

note over mil #LightGreen
	__//<access token>//__
	base64url(//<token header>//) + "." +
	base64url(//<access token payload>//) + "." +
	//<base64url of access token signature>//
	__//<access token payload>//__
	{
		"sub": "//<payee code>//",
		"aud": "mil.pagopa.it",
		"iss": "https:////<host name>///mil-auth",
		"iat": //<issue unix epoch>//,
		"exp": //<expiration unix epoch>//,
		"groups": [
			"public_administration"
		]
	}
end note

group get terminal data
	mil -> mil_auth ++ : POST /token
		note left
			__request body__
			client_id=//<mil-payment-notice client id>//&
			grant_type=client_credentials&
			client_secret=//<secret>//
		end note

	mil_auth --> mil -- : HTTP 200 (ok)
		note right
			__response body__
			{
				"access_token": "//<mil-payment-notice access token>//",
				"token_type": "Bearer",
				"expires_in": //<access token duration>//
			}
			__//<mil-payment-notice access token>//__
			base64url(//<token header>//) + "." +
			base64url(//<access token payload>//) + "." +
			//<base64url of access token signature>//
			__//<access token payload>//__
			{
				"sub": "mil-payment-notice",
				"aud": "mil.pagopa.it",
				"iss": "https:////<host name>///mil-auth",
				"iat": //<issue unix epoch>//,
				"exp": //<expiration unix epoch>//,
				"groups": [
					"pos_finder",
				]
			}
		end note

	mil -> mil_registry ++ : GET /terminals///<terminal uuid>//
		note left
			__header__
			RequestId: //<request id>//
			Authorization: Bearer //<mil-payment-notice access token>//
		end note

	mil_registry --> mil -- : HTTP 200 (ok)
		note right
			__body__
			{
				"terminalUuid": "//<terminal uuid>//",
				"serviceProviderId": "//<service provider id>//",
				"terminalHandlerId": "//<terminal handler id>//",
				"terminalId": "//<terminal id>//",
				"enabled": //<enabled>//,
				"payeeCode": "//<terminal payee code>//",
				"slave": "//<slave>//",
				"workstations": [
					//<array of workstations>//
				],
				"pagoPa": "//<pagopa>//",
				"pagoPaConf": {
					"pspId": "//<psp id>//",
					"brokerId": "//<broker id>//",
					"channelId": "//<channel id>//"
				},
				"idpay": "//<idpay>//"
			}
		end note

	note over mil #Orange
		On terminal not found, return HTTP 400 (bad request) with specific error body.
		On //<enabled>// = false, return HTTP 400 (bad request) with specific error body.
		On //<slave>// = false, return HTTP 400 (bad request) with specific error body.
		On //<pagopa>// = false, return HTTP 400 (bad request) with specific error body.
		On //<terminal payee code>// != //<payee code>//, return HTTP 400 (bad request) with specific error body.
		On any other failure, return HTTP 500 (server error) with specific error body. 
    end note
end

mil -> mil : Generate //<transaction id>//
	note left
		new SecureRandom().ints(0, 16)
			.limit(24)
			.mapToObj(Integer::toHexString)
			.collect(Collectors.joining());
	end note

group store trx data
	mil -> registry ++ : persist(//document//)
		note left
			__//document//__
			{
				"id": "//<transaction id>//",
				"creationTimestamp": "//<current timestamp>//",
				"lastUpdateTimestamp": "//<current timestamp>//",
				"status": "CREATED",
				"client": {
					"serviceProviderId": "//<service provider id>//",
					"channel": "POS",
					"payeeCode": "//<payee code>//",
					"terminalHandlerId": "//<terminal handler id>//",
					"terminalId": "//<terminal id>//",
					"terminalUuid": "//<terminal uuid>//"
				}
				"notices": [
					{
						"payeeCode": "//<payee code>//",
						"noticeNumber": "//<notice number>//"
						"amount": //<notice amount>//
					}
				]
			}
		end note
	
	registry --> mil -- : ok

	note over mil #Orange
		On any failure, return HTTP 500 (server error) with specific error body. 
	end note
end

mil --> management -- : HTTP 201 (created)
	note right
		__header__
		Location: /transactions///<transaction id>//
	end note

management --> operator -- : transaction id

deactivate operator
@enduml