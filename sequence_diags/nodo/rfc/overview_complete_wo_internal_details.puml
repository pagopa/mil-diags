@startuml
!include_many ../../common/skin.puml
skinparam maxMessageSize 500


== Verify ==
Client  -> MIL    : GET /paymentNotices///<qr code>//
MIL     -> Nodo   : POST /verifyPaymentNotice
Nodo   --> MIL    : HTTP 200 (ok)
MIL    --> Client : HTTP 200 (ok)


== Activate ==
Client  -> MIL    : PATCH /paymentNotices///<qr code>//
MIL     -> Nodo   : POST /activatePaymentNotice
Nodo   --> MIL    : HTTP 200 (ok)
MIL    --> Client : HTTP 200 (ok)


== Retrieve Fees ==
Client  -> MIL    : POST /fees
MIL     -> GEC    : POST /fees
GEC    --> MIL    : HTTP 200 (ok)
MIL    --> Client : HTTP 200 (ok)


== Pre-close ==
Client  -> MIL    : POST /payments
MIL     -> DB     : INSERT INTO PAYMENTS (ACQUIRER_ID, CHANNEL, MERCHANT_ID, TERMINAL_ID, PA_TAX_CODE, NOTICE_NUMBER, PAYMENT_TOKEN, PAYMENT_METHOD, TRANSACTION_ID, TOTAL_AMOUNT, FEE, TIMESTAMP, STATUS) VALUES (..., 'PRE_CLOSE')
DB     --> MIL    : ack
MIL    --> Client : HTTP 201 (created)


== e-Money Transaction ==
Client <-> GT     : e-Money Transaction


== Close Payment ==
Client  -> MIL    : PATCH /payments///<transaction id>//
MIL     -> DB     : UPDATE PAYMENTS SET STATUS = 'CLOSING' WHERE TRANSACTION_ID = //<transaction id>//
DB     --> MIL    : ack
MIL     -> Nodo   : POST /closepayment
Nodo   --> MIL    : HTTP 200 (ok) with outcome = OK || HTTP 200 (ok) with unparsable response || timeout || HTTP 408 (request timeout) || HTTP status code not in (200, 400, 404, 408, 422)
MIL     -> DB     : UPDATE PAYMENTS SET STATUS = 'PENDING_OUTCOME' WHERE TRANSACTION_ID = //<transaction id>//
DB     --> MIL    : ack
MIL    --> Client : HTTP 200 (ok)


== Polling #1 ==		
Client  -> MIL    : GET /payments///<transaction id>//
MIL     -> DB     : SELECT STATUS FROM PAYMENTS WHERE TRANSACTION_ID = //<transaction id>//
DB     --> MIL    : STATUS = 'PENDING_OUTCOME'
MIL    --> Client : HTTP 404 (not found)


== Payment Result ==
Nodo    -> MIL    : POST /payments///<transaction id>//
MIL     -> DB     : UPDATE PAYMENTS SET STATUS = 'OUTCOME_OK' WHERE TRANSACTION_ID = //<transaction id>//
DB     --> MIL    : ack
MIL    --> Nodo   : HTTP 200 (ok)


== Polling #2 ==
Client  -> MIL    : GET /payments///<transaction id>//
MIL     -> DB     : SELECT STATUS FROM PAYMENTS WHERE TRANSACTION_ID = //<transaction id>//
DB     --> MIL    : STATUS = 'OUTCOME_OK'
MIL    --> Client : HTTP 200 (ok)


@enduml