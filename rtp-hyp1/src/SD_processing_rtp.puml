@startuml
title : Send a Request to Pay from Payment Notice Archive (HYP1) 
actor ec as "EC"
actor archivio as "Archivio \n Centralizzato"

!pragma teoz true
box "PagoPA-RTP Solution" #LightBlue
participant rtp as "spRtpEC"
participant us1 as "rtp-server" 
participant data as "rtp_route"
box "COTS"
participant us2 as "rtp-proxy"
end box 
end box

'rtp_route
' pagopa_node
'pagopa_repo



participant srtp_deb as "SRTP-DEB"

participant pagopa as "pagoPA"
actor deb as "Debtor"

ec -> rtp : sendRTP(fiscalCode,NoticeNumber)


rtp -> rtp : Identity&Authorize


== compose Request to Pay == 
rtp -> pagopa_node : verifyPaymentNotice(fiscal_code,NoticeNumber)
pagopa_node --> rtp : 200-OK (due_date, amount)
note over rtp: Verifying the notice payment on pagoPA,\n the client has no  responsability about payability
rtp -> data : search(EC,Debtor)
data -> data : retrive EC and Deb informations
data --> rtp : 200 OK (EC_RTPData, Debotr_RTPData,IBAN?)
rtp -> rtp 


== Send Request to Pay == 
rtp -> srtp_deb : POST /sepa-request-to-pay-requests/
srtp_deb --> rtp : 201
== Notify to Debotr ==
srtp_deb -> deb : notify RTP
alt accept 
deb -> srtp_deb : AcceptRTP
else 
deb -> srtp_deb: DenyRTP
end
== Acquire Final Response == 
srtp_deb -> rtp : POST /{callbackUrl} embedding SepaRequestToPayResponse
note over srtp_deb : This forwards the payer's decision (Acceptation/Refusal)
rtp -> srtp_deb : 200
...
== Update Result  == 
loop 
archivio -> rtp : RTP status update
rtp --> archivio: status_update
end
@enduml