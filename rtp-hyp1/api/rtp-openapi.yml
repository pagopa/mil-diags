openapi: 3.0.1
info:
  title: PagoPA MultiChannel - OpenAPI 3.1
  description: |-
    This is a sample collection of API for RTP

  termsOfService: http://swagger.io/terms/
  contact:
    email: cstar@pagopa.it
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.11
externalDocs:
  description: Find out more about Swagger
  url: http://swagger.io

servers:
- url: https://mil.pagopa.it/{basePath}
  description: The production API server
  variables:
    basePath:
      # open meaning there is the opportunity to use special base paths as assigned by the provider, default is `v2`
      default: v1
- url: https://uat.mil.pagopa.it/{basePath}
  description: The UAT API server
  variables:
    basePath:
      # open meaning there is the opportunity to use special base paths as assigned by the provider, default is `v2`
      default: v1

tags:
  - name: activation
    description: Everything about RTP Activation Process
    externalDocs:
      description: Find out more
      url: https://docs.google.com/document/d/1lLwGMYXt5BsboobTw2f5E9N0k5W27FosE_awx0NndgA/edit?pli=1#heading=h.c56sp56o9no0
  - name: registry
    description: Everything about the EC Enrollnment 
    externalDocs:
      description: Find out more about our store
      url: https://docs.google.com/document/d/1lLwGMYXt5BsboobTw2f5E9N0k5W27FosE_awx0NndgA/edit?pli=1#heading=h.2y81s09k5f6p
  - name: message
    description : Everything about Message Registry

paths:
  /registry/findByPayeeCode:
    post:
      tags:
        - registry
      summary: search a payee
      description: search a payee
      operationId: findByPayeeCode
      requestBody:
        description: Search Payee
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PayeeFilter'
      responses:
        '200':
          description: Succesful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payee'
  
  /registry/enrollPayee:
    post:
      tags:
        - registry
      summary: manage EC enroll data 
      description: manage EC enroll data 
      operationId: enrollPayee
      requestBody:
        description: Enroll data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnrollDataModel'
      responses:
        '200':
          description: Succesful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnrollDataModelResponse'
      security:
        - mil_auth:
          - service_provider
          - mil_papos_admin
          
  /registry/{enrollId}:
    delete:
      tags: 
        - registry
      summary: delete an enrollnment 
      description: delte an enrollnment
      operationId: deleteEnroll
      parameters: 
        - name: enrollId
          in: path
          description : unique id for the enroll, same as returned by /reigstry/enroll
          required: true
          schema:
            type: string
      responses: 
        '200':
          description: succesfull operation
        

  /userActivation:
    post:
      tags:
        - activation
      summary: Add a new user activation to the Service Provider
      description: Add a new user to the store
      operationId: addUser
      requestBody:
        description: Create a new user in the store
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserActivation'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserActivation'
        '400':
          description: Invalid input
      security:
        - mil_auth:
          - service_provider
          - mil_papos_admin
    put:
      tags:
        - activation
      summary: Update an existing user activation
      description: Update an existing user activation
      operationId: updateUser
      requestBody:
        description: Update an existent user activation 
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserActivation'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserActivation'
        '400':
          description: Invalid ID supplied
        '404':
          description: User not found
  /userActivation/{userId}:
    parameters: 
          - name: userId
            in: path
            description: identifier of the Payer (P009)
            required: true
            schema:
              type: string
    delete:
      tags:
          - activation
      summary: delete an existing user activation
      description: delete an existing user activation
      operationId: deleteUser
      
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserActivation'
      security:
        - mil_auth:
            - service_provider
            - mil_papos_admin
    get:
      tags:
        - activation
      summary: Find user activation by ID
      description: Returns a single user activation
      operationId: getUserById
      parameters:
        - name: userId
          in: path
          description: Identifier of the Payer (P009)
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserActivation'
        '400':
          description: Invalid ID supplied
        '404':
          description: Pet not found
      security:
        - mil_auth:
          - service_provider
          - mil_papos_admin
            
  /userActivation/findByFiscalCode:
    post:
      tags:
        - activation
      summary: Returns User Registry 
      description: Returns a map of status codes to quantities
      operationId: searchUserRegistry
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserActivation'
      security: 
        - mil_auth:
          - service_provider
          - mil_papos_admin
          
  
  /messages:
    put:
      tags:
        - message
      summary: initiate a new message 
      operationId: createS008Url
      requestBody:
        description: Create a new a S008 Url 
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Message'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/S008'
        '400':
          description: Invalid ID supplied
        '404':
          description: Pet not found
  
  /messages/{messageId}:
    post:
      tags:
        - message
      summary: functional positive confirmation callback
      parameters:
        - in: path
          name: messageId   # Note the name is the same as in the path
          required: true
          schema:
            type: string
          description: unique id for the message, same as returned by /messages
      responses:
        '200':
          description: Succesful operation
  
  /messages/{messageId}/paymentInfo:
    get:
      tags:
        - message
      summary: retrieve payment information
      operationId: getPaymentNoticeInfos
      parameters:
        - name: messageId
          in: path
          description : unique id for the message
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentNoticeInfo'

components:
  schemas:
    Debtor:
      type: object
      properties:
        typeOf:
          type: string
          description : Person Natural | Person legal
        identificationCode:
          type: string
          description : Vat Code or fiscal Code 
    
    UserActivation:
      type: object
      properties:
        id:
          type: string
          description:  Identifier of the Payer (P009)
        identificationCode:
          type: string
          description: fiscal code , Identifier of the Payer given by Payee (B028)
        typeOf:
          type: string
          description: Person Natural or Person Legal (B005)
        name:
          type: string
          description: Name of the Payer (P001)
        address:
          type: string
          description: P005 Address of the Payer (P005)
        serviceProviderId:
          type: string
          description: Identifier of the Payerâ€™s RTP Service Provider (N001)
    Message:
      type: object
      properties:
        noticeNumber:
          type: string
          description: numero avviso
        ecFiscalCode:
          type: string
          description: codice fiscale ente creditore
        due_date:
          type: string 
          description: data fine richiesta di pagamento 
    S008:
      type: object
      properties:
        noticeNumber:
          type: string
          description: numero avviso
        ecFiscalCode:
          type: string
          description: codice fiscale ente creditore
        s008Url: 
          type: string
          format: url

    PaymentNoticeInfo:
      type: object
      properties:
        noticeNumber:
          type: string
          description: numero avviso
        ecFiscalCode:
          type: string
          description: codice fiscale ente creditore
        description:
          type: string
          description: descrizione dell'avviso di pagamento
        due_date:
          type: string
          format: date
    
    PayeeFilter:
      type: object
      properties:
        fiscalCode:
          type: string
          description : EC fiscal code
          
    Payee:
      type: object 
      properties: 
        fiscalCode:
          type: string
          description : EC fiscal code
        name:
          type: string
          description : name of the Payee
    
    EnrollDataModel:
      type: object
      properties:
        payeeFiscalCode:
          type: string
          description: EC fiscal code
        serviceProviderId:
          type: string
          description: unique service provider id, provided during onboarding
          
    EnrollDataModelResponse:
      type: object
      properties:
        payee:
          $ref: '#/components/schemas/Payee'
        
          
          
        
      
        

  securitySchemes:
    mil_auth:
      description: A bearer token in the format of a JWS and conforms to the specifications included in RFC8725
      type: oauth2
      flows:
        clientCredentials:
          tokenUrl: https://mil-d-apim.azure-api.net/mil-auth/token
          refreshUrl: https://mil-d-apim.azure-api.net/mil-auth/token
          scopes:
            service_provider: Represents Service Provider role
            mil_papos_admin: Represents system administrator role
